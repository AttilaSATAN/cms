{"filter":false,"title":"gruntfile.js","tooltip":"/gruntfile.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":169,"column":0},"end":{"row":169,"column":2}},"text":"};"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":169,"column":0}},"nl":"\n","lines":["'use strict';","","module.exports = function(grunt) {","\t// Unified Watch Object","\tvar watchFiles = {","\t\tserverViews: ['app/views/**/*.*'], ","\t\tserverJS: ['gruntfile.js', 'server.js', 'config/**/*.js', 'app/**/*.js'],","\t\tclientViews: ['public/modules/**/views/**/*.html'],","\t\tclientJS: ['public/js/*.js', 'public/modules/**/*.js'],","\t\tclientCSS: ['public/modules/**/*.css'],","\t\tmochaTests: ['app/tests/**/*.js']","\t};","","\t// Project Configuration","\tgrunt.initConfig({","\t\tpkg: grunt.file.readJSON('package.json'),","\t\twatch: {","\t\t\tserverViews: {","\t\t\t\tfiles: watchFiles.serverViews,","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tserverJS: {","\t\t\t\tfiles: watchFiles.serverJS,","\t\t\t\ttasks: ['jshint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tclientViews: {","\t\t\t\tfiles: watchFiles.clientViews,","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true,","\t\t\t\t}","\t\t\t},","\t\t\tclientJS: {","\t\t\t\tfiles: watchFiles.clientJS,","\t\t\t\ttasks: ['jshint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tclientCSS: {","\t\t\t\tfiles: watchFiles.clientCSS,","\t\t\t\ttasks: ['csslint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t}","\t\t},","\t\tjshint: {","\t\t\tall: {","\t\t\t\tsrc: watchFiles.clientJS.concat(watchFiles.serverJS),","\t\t\t\toptions: {","\t\t\t\t\tjshintrc: true","\t\t\t\t}","\t\t\t}","\t\t},","\t\tcsslint: {","\t\t\toptions: {","\t\t\t\tcsslintrc: '.csslintrc',","\t\t\t},","\t\t\tall: {","\t\t\t\tsrc: watchFiles.clientCSS","\t\t\t}","\t\t},","\t\tuglify: {","\t\t\tproduction: {","\t\t\t\toptions: {","\t\t\t\t\tmangle: false","\t\t\t\t},","\t\t\t\tfiles: {","\t\t\t\t\t'public/dist/application.min.js': 'public/dist/application.js'","\t\t\t\t}","\t\t\t}","\t\t},","\t\tcssmin: {","\t\t\tcombine: {","\t\t\t\tfiles: {","\t\t\t\t\t'public/dist/application.min.css': '<%= applicationCSSFiles %>'","\t\t\t\t}","\t\t\t}","\t\t},","\t\tnodemon: {","\t\t\tdev: {","\t\t\t\tscript: 'server.js',","\t\t\t\toptions: {","\t\t\t\t\tnodeArgs: ['--debug'],","\t\t\t\t\text: 'js,html',","\t\t\t\t\twatch: watchFiles.serverViews.concat(watchFiles.serverJS)","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'node-inspector': {","\t\t\tcustom: {","\t\t\t\toptions: {","\t\t\t\t\t'web-port': 1337,","\t\t\t\t\t'web-host': 'localhost',","\t\t\t\t\t'debug-port': 5858,","\t\t\t\t\t'save-live-edit': true,","\t\t\t\t\t'no-preload': true,","\t\t\t\t\t'stack-trace-limit': 50,","\t\t\t\t\t'hidden': []","\t\t\t\t}","\t\t\t}","\t\t},","        ngmin: {","            production: {","                files: {","                    'public/dist/application.js': '<%= applicationJavaScriptFiles %>'","                }","            }","        },","\t\tconcurrent: {","\t\t\tdefault: ['nodemon', 'watch'],","\t\t\tdebug: ['nodemon', 'watch', 'node-inspector'],","\t\t\toptions: {","\t\t\t\tlogConcurrentOutput: true","\t\t\t}","\t\t},","\t\tenv: {","\t\t\ttest: {","\t\t\t\tNODE_ENV: 'test'","\t\t\t}","\t\t},","\t\tmochaTest: {","\t\t\tsrc: watchFiles.mochaTests,","\t\t\toptions: {","\t\t\t\treporter: 'spec',","\t\t\t\trequire: 'server.js'","\t\t\t}","\t\t},","\t\tkarma: {","\t\t\tunit: {","\t\t\t\tconfigFile: 'karma.conf.js'","\t\t\t}","\t\t}","\t});","","\t// Load NPM tasks ","\trequire('load-grunt-tasks')(grunt);","","\t// Making grunt default to force in order not to break the project.","\tgrunt.option('force', true);","","\t// A Task for loading the configuration object","\tgrunt.task.registerTask('loadConfig', 'Task that loads the config into a grunt option.', function() {","\t\tvar init = require('./config/init')();","\t\tvar config = require('./config/config');","","\t\tgrunt.config.set('applicationJavaScriptFiles', config.assets.js);","\t\tgrunt.config.set('applicationCSSFiles', config.assets.css);","\t});","","\t// Default task(s).","\tgrunt.registerTask('default', ['lint', 'concurrent:default']);","","\t// Debug task.","\tgrunt.registerTask('debug', ['lint', 'concurrent:debug']);","","\t// Lint task(s).","\tgrunt.registerTask('lint', ['jshint', 'csslint']);","","\t// Build task(s).","\tgrunt.registerTask('build', ['lint', 'loadConfig', 'ngmin', 'uglify', 'cssmin']);","","\t// Test task.","\tgrunt.registerTask('test', ['env:test', 'mochaTest', 'karma:unit']);"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":13}},"text":"'use strict';"},{"action":"insertText","range":{"start":{"row":0,"column":13},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":196,"column":0}},"lines":["","module.exports = function(grunt) {","\t// Unified Watch Object","","\tvar watchFiles = {","\t\tserverViews: ['app/views/**/*.*'], ","\t\tserverJS: ['gruntfile.js', 'server.js', 'config/**/*.js', 'app/**/*.js'],","\t\tclientViews: ['public/modules/**/views/**/*.html'],","\t\tclientJS: ['public/js/*.js', 'public/modules/**/*.js'],","\t\tclientCSS: ['public/modules/**/*.css'],","\t\tmochaTests: ['app/tests/**/*.js']","\t};","","\t// Project Configuration","\tgrunt.initConfig({","\t\tpkg: grunt.file.readJSON('package.json'),","","\t\twatch: {","\t\t\t styles: {","\t\t        files: ['public/modules/core/less/*.less'], // which files to watch","\t\t        tasks: ['less'],","\t\t        options: {","\t\t          nospawn: true,","\t\t          livereload: true","\t\t        }","      \t\t},","\t\t\tserverViews: {","\t\t\t\tfiles: watchFiles.serverViews,","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tserverJS: {","\t\t\t\tfiles: watchFiles.serverJS,","\t\t\t\ttasks: ['jshint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tclientViews: {","\t\t\t\tfiles: watchFiles.clientViews,","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true,","\t\t\t\t}","\t\t\t},","\t\t\tclientJS: {","\t\t\t\tfiles: watchFiles.clientJS,","\t\t\t\ttasks: ['jshint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t},","\t\t\tclientCSS: {","\t\t\t\tfiles: watchFiles.clientCSS,","\t\t\t\ttasks: ['csslint'],","\t\t\t\toptions: {","\t\t\t\t\tlivereload: true","\t\t\t\t}","\t\t\t}","\t\t},","\t\tless: {","\t      development: {","\t        options: {","\t          //compress: true,","\t          //yuicompress: true,","\t          //optimization: 2","\t        },","\t        files: {","\t          // target.css file: source.less file","\t          'public/modules/core/css/theme.css': 'public/modules/core/less/theme.less'","\t        }","\t      }","\t \t},","\t\tjshint: {","\t\t\tall: {","\t\t\t\tsrc: watchFiles.clientJS.concat(watchFiles.serverJS),","\t\t\t\toptions: {","\t\t\t\t\tjshintrc: true","\t\t\t\t}","\t\t\t}","\t\t},","\t\tcsslint: {","\t\t\toptions: {","\t\t\t\tcsslintrc: '.csslintrc',","\t\t\t},","\t\t\tall: {","\t\t\t\tsrc: watchFiles.clientCSS","\t\t\t}","\t\t},","\t\tuglify: {","\t\t\tproduction: {","\t\t\t\toptions: {","\t\t\t\t\tmangle: false","\t\t\t\t},","\t\t\t\tfiles: {","\t\t\t\t\t'public/dist/application.min.js': 'public/dist/application.js'","\t\t\t\t}","\t\t\t}","\t\t},","\t\tcssmin: {","\t\t\tcombine: {","\t\t\t\tfiles: {","\t\t\t\t\t'public/dist/application.min.css': '<%= applicationCSSFiles %>'","\t\t\t\t}","\t\t\t}","\t\t},","\t\tnodemon: {","\t\t\tdev: {","\t\t\t\tscript: 'server.js',","\t\t\t\toptions: {","\t\t\t\t\tnodeArgs: ['--debug'],","\t\t\t\t\text: 'js,html',","\t\t\t\t\twatch: watchFiles.serverViews.concat(watchFiles.serverJS)","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'node-inspector': {","\t\t\tcustom: {","\t\t\t\toptions: {","\t\t\t\t\t'web-port': 1337,","\t\t\t\t\t'web-host': 'localhost',","\t\t\t\t\t'debug-port': 5858,","\t\t\t\t\t'save-live-edit': true,","\t\t\t\t\t'no-preload': true,","\t\t\t\t\t'stack-trace-limit': 50,","\t\t\t\t\t'hidden': []","\t\t\t\t}","\t\t\t}","\t\t},","        ngmin: {","            production: {","                files: {","                    'public/dist/application.js': '<%= applicationJavaScriptFiles %>'","                }","            }","        },","\t\tconcurrent: {","\t\t\tdefault: ['nodemon', 'watch'],","\t\t\tdebug: ['nodemon', 'watch', 'node-inspector'],","\t\t\toptions: {","\t\t\t\tlogConcurrentOutput: true","\t\t\t}","\t\t},","\t\tenv: {","\t\t\ttest: {","\t\t\t\tNODE_ENV: 'test'","\t\t\t}","\t\t},","\t\tmochaTest: {","\t\t\tsrc: watchFiles.mochaTests,","\t\t\toptions: {","\t\t\t\treporter: 'spec',","\t\t\t\trequire: 'server.js'","\t\t\t}","\t\t},","\t\tkarma: {","\t\t\tunit: {","\t\t\t\tconfigFile: 'karma.conf.js'","\t\t\t}","\t\t}","\t});","","\t// Load NPM tasks ","\trequire('load-grunt-tasks')(grunt);","","\t// Making grunt default to force in order not to break the project.","\tgrunt.option('force', true);","","\t// A Task for loading the configuration object","\tgrunt.task.registerTask('loadConfig', 'Task that loads the config into a grunt option.', function() {","\t\tvar init = require('./config/init')();","\t\tvar config = require('./config/config');","","\t\tgrunt.config.set('applicationJavaScriptFiles', config.assets.js);","\t\tgrunt.config.set('applicationCSSFiles', config.assets.css);","\t});","","\t// Default task(s).","\tgrunt.registerTask('default', ['lint', 'concurrent:default']);","","\t// Debug task.","\tgrunt.registerTask('debug', ['lint', 'concurrent:debug']);","","\t// Lint task(s).","\tgrunt.registerTask('lint', ['jshint', 'csslint']);","","\t// Build task(s).","\tgrunt.registerTask('build', ['lint', 'loadConfig', 'ngmin', 'uglify', 'cssmin']);","","\t// Test task.","\tgrunt.registerTask('test', ['env:test', 'mochaTest', 'karma:unit']);","\t","","  ",""]},{"action":"insertText","range":{"start":{"row":196,"column":0},"end":{"row":196,"column":2}},"text":"};"}]}]]},"ace":{"folds":[],"scrolltop":928,"scrollleft":0,"selection":{"start":{"row":191,"column":69},"end":{"row":191,"column":69},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1407760874349,"hash":"f9d878bc3e15358a82121a5726818330ba0b425e"}